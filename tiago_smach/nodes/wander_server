#!/usr/bin/env python
import rospy
import smach
import smach_ros

from tiago_behaviours_msgs.msg import WanderAction
import tiago_smach.wander

def main():
    rospy.init_node('wander_server')
    rospy.sleep(1.0)

    # Construct state machine
    sm = tiago_smach.wander.Wander()

    # # Smach viewer
    sis = smach_ros.IntrospectionServer('wander_server', sm, '/SM_WANDER_SERVER')
    sis.start()

    # Construct action server wrapper
    asw = smach_ros.ActionServerWrapper(
        server_name='wander',
        action_spec=WanderAction,
        wrapped_container=sm,
        succeeded_outcomes=['FINISHED'],
        aborted_outcomes=['FAILED'],
        preempted_outcomes=['PREEMPTED'],
        goal_key='sm_goal')

    # Run the server in a background thread
    asw.run_server()
    rospy.spin()
    sis.stop()

if __name__ == '__main__':
    main()
